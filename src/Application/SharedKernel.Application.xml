<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharedKernel.Application</name>
    </assembly>
    <members>
        <member name="T:SharedKernel.Application.ActiveDirectory.IActiveDirectoryService">
            <summary>
            LDAP manager
            </summary>
        </member>
        <member name="P:SharedKernel.Application.ActiveDirectory.IActiveDirectoryService.IsConfigured">
            <summary>
            Checks if ActiveDirectorySettings object is on appsettings.json
            </summary>
        </member>
        <member name="M:SharedKernel.Application.ActiveDirectory.IActiveDirectoryService.Exists(System.String,System.String)">
            <summary>
            Check that a user exists in the domain
            </summary>
            <param name="user"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Adapter.ITypeAdapter">
            <summary>
            Generic type adapter for mapping objects
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Adapter.ITypeAdapter.MapTo``1(System.Object)">
            <summary>
            Execute a mapping from the source object to a new destination object.
            The source type is inferred from the source object.
            </summary>
            <typeparam name="TDestination">Destination type to create</typeparam>
            <param name="source">Source object to map from</param>
            <returns>Mapped destination object</returns>
        </member>
        <member name="M:SharedKernel.Application.Adapter.ITypeAdapter.MapTo``2(``0)">
            <summary>
            Execute a mapping from the source object to a new destination object.
            </summary>
            <typeparam name="TSource">Source type to use, regardless of the runtime type</typeparam>
            <typeparam name="TDestination">Destination type to create</typeparam>
            <param name="source">Source object to map from</param>
            <returns>Mapped destination object</returns>
        </member>
        <member name="M:SharedKernel.Application.Adapter.ITypeAdapter.MapTo``2(``0,``1)">
            <summary>
            Execute a mapping from the source object to the existing destination object.
            </summary>
            <typeparam name="TSource">Source type to use</typeparam>
            <typeparam name="TDestination">Destination type</typeparam>
            <param name="source">Source object to map from</param>
            <param name="destination">Destination object to map into</param>
            <returns>The mapped destination object, same instance as the <paramref name="destination" /> object</returns>
        </member>
        <member name="M:SharedKernel.Application.Adapter.ITypeAdapter.ProjectTo``1(System.Linq.IQueryable)">
            <summary>
            Availability for LINQ to entities
            </summary>
            <typeparam name="TDestination"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Adapter.ITypeAdapterFactory">
            <summary>
            Base contract for adapter factory
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Adapter.ITypeAdapterFactory.Create">
            <summary>
            Create a generic type adapter for mapping objects
            </summary>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Adapter.TypeAdapterExtensions">
            <summary>
            Type adapter extensions for manage collections
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Adapter.TypeAdapterExtensions.MapTo``1(System.Object)">
            <summary>
            Project a type using a DTO
            </summary>
            <typeparam name="TProjection">The dto projection</typeparam>
            <param name="aggregate">The source aggregate to project</param>
            <returns>The projected type</returns>
        </member>
        <member name="M:SharedKernel.Application.Adapter.TypeAdapterExtensions.MapTo``1(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            projected a enumerable collection of items
            </summary>
            <typeparam name="TProjection">The dto projection type</typeparam>
            <param name="items">the collection of entity items</param>
            <returns>Projected collection</returns>
        </member>
        <member name="M:SharedKernel.Application.Adapter.TypeAdapterExtensions.ProjectTo``1(System.Linq.IQueryable)">
            <summary>
            projected a enumerable collection of items
            </summary>
            <typeparam name="TProjection">The dto projection type</typeparam>
            <param name="items">the collection of entity items</param>
            <returns>Projected collection</returns>
        </member>
        <member name="T:SharedKernel.Application.Adapter.TypeAdapterFactory">
            <summary>
            Mapper factory
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Adapter.TypeAdapterFactory.SetCurrent(SharedKernel.Application.Adapter.ITypeAdapterFactory)">
            <summary>
            Set the current type adapter factory
            </summary>
            <param name="adapterFactory">The adapter factory to set</param>
        </member>
        <member name="M:SharedKernel.Application.Adapter.TypeAdapterFactory.Create">
            <summary>
            Create a new type adapter from current factory
            </summary>
            <returns>Created type adapter</returns>
        </member>
        <member name="T:SharedKernel.Application.Caching.ICacheHelper">
            <summary>
            Cache helper
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Caching.ICacheHelper.GetAsync``1(System.String)">
            <summary>
            Get from cache the T value
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Caching.ICacheHelper.SetAsync``1(System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            Save into cache the T value
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Caching.ICacheHelper.GetOrCreateAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Nullable{System.TimeSpan})">
            <summary>
            Validate if key exists on cache, and if not, call generator function and cache response
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="generator"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Caching.ICacheHelper.Remove(System.String)">
            <summary>
            Remove cache entry
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:SharedKernel.Application.Communication.Email.EmailAttachment">
            <summary>
            An email attachment
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Communication.Email.EmailAttachment.#ctor(System.String,System.Byte[])">
            <summary>
            An email attachment
            </summary>
            <param name="filename"></param>
            <param name="data"></param>
        </member>
        <member name="P:SharedKernel.Application.Communication.Email.EmailAttachment.Filename">
            <summary>
            Filename with extension
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Communication.Email.EmailAttachment.Data">
            <summary>
            Attachment contents
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Communication.Email.IEmailSender">
            <summary>
            Email sender manager
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Communication.Email.IEmailSender.SendEmailAsync(System.String,System.String,SharedKernel.Application.Communication.Email.EmailAttachment)">
            <summary>
            Sends an email to default email from
            </summary>
            <param name="subject">Subject</param>
            <param name="message">Message in HTML</param>
            <param name="attachment">File attachemnt</param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Communication.Email.IEmailSender.SendEmailAsync(System.String,System.String,System.String,SharedKernel.Application.Communication.Email.EmailAttachment)">
            <summary>
            Sends an email
            </summary>
            <param name="email">From</param>
            <param name="subject">Subject</param>
            <param name="message">Message in HTML</param>
            <param name="attachment">File attachemnt</param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Commands.CommandNotRegisteredException">
            <summary>
             Exception thrown if the command handler is not registered in the dependency container
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Commands.CommandNotRegisteredException.#ctor(System.String)">
            <summary>
             Exception thrown if the command handler is not registered in the dependency container
            </summary>
            <param name="command"></param>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Commands.Handlers.ICommandRequestHandler`1">
            <summary>
            Handler of a command that does not return anything
            </summary>
            <typeparam name="TCommand"></typeparam>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Commands.Handlers.ICommandRequestHandler`1.Handle(`0,System.Threading.CancellationToken)">
            <summary>
            The implementation of the command
            </summary>
            <param name="command">Command</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Commands.Handlers.ICommandRequestHandler`2">
            <summary>
            Handler of a command that returns a response
            </summary>
            <typeparam name="TCommand"></typeparam>
            <typeparam name="TResponse"></typeparam>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Commands.Handlers.ICommandRequestHandler`2.Handle(`0,System.Threading.CancellationToken)">
            <summary>
            The implementation of the command
            </summary>
            <param name="command">Command</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Commands.ICommandBus">
            <summary>
            Command bus
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Commands.ICommandBus.Dispatch``1(SharedKernel.Application.Cqrs.Commands.ICommandRequest{``0},System.Threading.CancellationToken)">
            <summary>
            Dispatch a command that returns a response
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="command"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Commands.ICommandBus.Dispatch(SharedKernel.Application.Cqrs.Commands.ICommandRequest,System.Threading.CancellationToken)">
            <summary>
            Dispatch a command request that does not return anything
            </summary>
            <param name="command"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Commands.ICommandBus.DispatchOnQueue(SharedKernel.Application.Cqrs.Commands.ICommandRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Dispatch a command request on a queue.
            </summary>
            <param name="command"></param>
            <param name="queueName">Queue name</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Commands.ICommandBus.QueueInBackground(SharedKernel.Application.Cqrs.Commands.ICommandRequest)">
            <summary>
            Queue a command request to background service
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Commands.ICommandRequest">
            <summary>
            Command request that does not return anything
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Commands.ICommandRequest`1">
            <summary>
            Command request that returns a response
            </summary>
            <typeparam name="TResponse"></typeparam>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Middlewares.IMiddleware`1">
            <summary>
            Middleware that runs both on the command bus, as well as on the query and event bus
            </summary>
            <typeparam name="TRequest"></typeparam>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Middlewares.IMiddleware`1.Handle(`0,System.Threading.CancellationToken,System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>
            Middleware that runs both on the command bus, as well as on the query and event bus
            </summary>
            <param name="request"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Middlewares.IMiddleware`2">
            <summary>
            Middleware that runs both on the command bus, as well as on the query and event bus
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Middlewares.IMiddleware`2.Handle(`0,System.Threading.CancellationToken,System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{`1}})">
            <summary>
            Middleware that runs both on the command bus, as well as on the query and event bus
            </summary>
            <param name="request"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Middlewares.IRequest`1">
            <summary>
            Request made to a bus
            </summary>
            <typeparam name="TResponse"></typeparam>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Middlewares.IRetryPolicyExceptionHandler">
            <summary>
            RetryPolicyMiddleware Exception handler
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Middlewares.IRetryPolicyExceptionHandler.NeedToRetryTheException(System.Exception)">
            <summary>
            Check if an exception has to be retried
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.Contracts.IPagedList`1">
            <summary>
            A paged result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Contracts.IPagedList`1.TotalRecords">
            <summary>
            Total records before filtered
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Contracts.IPagedList`1.TotalRecordsFiltered">
            <summary>
            Total records after filtered
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Contracts.IPagedList`1.Items">
            <summary>
            Paged items
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.Entities.ComboDto`1">
            <summary>
            Combo item
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.ComboDto`1.Value">
            <summary>
            Combo value
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.ComboDto`1.Text">
            <summary>
            Combo text
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.Entities.FilterProperty">
            <summary>
            Filter by a property
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Queries.Entities.FilterProperty.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.FilterProperty.Field">
            <summary>
            The data item field to which the filter operator is applied.
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.FilterProperty.Value">
            <summary>
            The value to which the field is compared. Has to be of the same type as the field.
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.Entities.PageOptions">
            <summary>
            Base filter for Dapper queries
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Queries.Entities.PageOptions.#ctor(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{SharedKernel.Application.Cqrs.Queries.Entities.Order},System.Collections.Generic.IEnumerable{SharedKernel.Application.Cqrs.Queries.Entities.FilterProperty})">
            <summary>
            Constructor
            </summary>
            <param name="skip"></param>
            <param name="take"></param>
            <param name="searchText"></param>
            <param name="showDeleted"></param>
            <param name="showOnlyDeleted"></param>
            <param name="orders"></param>
            <param name="filterProperties"></param>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PageOptions.Skip">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PageOptions.Take">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PageOptions.SearchText">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PageOptions.ShowDeleted">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PageOptions.ShowOnlyDeleted">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PageOptions.Orders">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PageOptions.FilterProperties">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.Entities.ListItemBase`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.ListItemBase`1.Deleted">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.ListItemBase`1.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.Entities.Order">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Queries.Entities.Order.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="ascending"></param>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.Order.Field">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.Order.Ascending">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.Entities.PagedList`1">
            <summary>
            A paged result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Queries.Entities.PagedList`1.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="totalRecords"></param>
            <param name="totalRecordsFiltered"></param>
            <param name="items"></param>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PagedList`1.TotalRecords">
            <summary>
            Total records before filtered
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PagedList`1.TotalRecordsFiltered">
            <summary>
            Total records after filtered
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.PagedList`1.Items">
            <summary>
            Paged items
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.Entities.Results`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.Results`1.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.Results`1.RecordsTotal">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.Results`1.RecordsFiltered">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Cqrs.Queries.Entities.Results`1.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.IQueryBus">
            <summary>
            Query bus abstraction
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Queries.IQueryBus.Ask``1(SharedKernel.Application.Cqrs.Queries.IQueryRequest{``0},System.Threading.CancellationToken)">
            <summary>
            Ask a query and return a data transfer object
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="query"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.IQueryRequest`1">
            <summary>
            Query bus request abstaction
            </summary>
            <typeparam name="TResponse"></typeparam>
        </member>
        <member name="T:SharedKernel.Application.Cqrs.Queries.QueryNotRegisteredException">
            <summary>
            Exception thrown if the query handler is not registered in the dependency container
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Cqrs.Queries.QueryNotRegisteredException.#ctor(System.String)">
            <summary>
            Exception thrown if the query handler is not registered in the dependency container
            </summary>
            <param name="query"></param>
        </member>
        <member name="T:SharedKernel.Application.Events.DomainEventSubscriber`1">
            <summary>
            
            </summary>
            <typeparam name="TDomain"></typeparam>
        </member>
        <member name="M:SharedKernel.Application.Events.DomainEventSubscriber`1.On(SharedKernel.Domain.Events.DomainEvent,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="event"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Events.DomainEventSubscriber`1.On(`0,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="event"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Events.IDomainEventSubscriberBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Events.IDomainEventSubscriberBase.On(SharedKernel.Domain.Events.DomainEvent,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="event"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Events.IEventBus">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Events.IEventBus.Publish(SharedKernel.Domain.Events.DomainEvent,System.Threading.CancellationToken)">
            <summary>
            Publish an event to event bus
            </summary>
            <param name="event"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Events.IEventBus.Publish(System.Collections.Generic.IEnumerable{SharedKernel.Domain.Events.DomainEvent},System.Threading.CancellationToken)">
            <summary>
            Publish a list of events to event bus
            </summary>
            <param name="events"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Exceptions.ExceptionCodes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Exceptions.ExceptionCodes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Exceptions.ExceptionCodes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Exceptions.ExceptionCodes.REFLEXION_001">
            <summary>
              Looks up a localized string similar to Error al setear el valor por reflexión.
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Exceptions.SharedKernelApplicationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Exceptions.SharedKernelApplicationException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:SharedKernel.Application.Exceptions.SharedKernelApplicationException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:SharedKernel.Application.Extensions.AggregateRootExtensions">
            <summary>
            AggregateRoot extensions
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Extensions.AggregateRootExtensions.PullDomainEvents``1(System.Collections.Generic.IEnumerable{SharedKernel.Domain.Aggregates.AggregateRoot{``0}})">
            <summary>
            Pull all domain events
            </summary>
            <typeparam name="T"></typeparam>
            <param name="aggregateRoots"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Extensions.EnumerableExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Extensions.EnumerableExtensions.SkipLast``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Remove last element of an enumerable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.EnumerableExtensions.AddFirst``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Inserts an item to the enumerable first position
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.EnumerableExtensions.SumTimeSpan``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.TimeSpan})">
            <summary>
            Sum time stamp
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.EnumerableExtensions.ToLambdaExpression``1(System.String)">
            <summary>
                Convert a string to lambda expression
                Example => "Person.Child.Name" : x => x.Person.Child.Name
            </summary>
            <typeparam name="TAggregate"></typeparam>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.EnumerableExtensions.AreConsecutive(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns if two elements are consecutive
            </summary>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.EnumerableExtensions.AllMatching``1(System.Collections.Generic.IEnumerable{``0},SharedKernel.Domain.Specifications.Common.ISpecification{``0})">
            <summary>
            
            </summary>
            <typeparam name="TAggregateRoot"></typeparam>
            <param name="items"></param>
            <param name="spec"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.EnumerableExtensions.PickRandom``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.EnumerableExtensions.ContainsText``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.EnumerableExtensions.FilterContainsProperties``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{SharedKernel.Application.Cqrs.Queries.Entities.FilterProperty})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Extensions.ListExtensions">
            <summary>
            List extensions
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Extensions.ListExtensions.Previous``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Get the previus value of a list
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.ListExtensions.Next``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Get the next value of the list
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Extensions.QueryableExtensions">
            <summary>
            Queryable extensions
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Extensions.QueryableExtensions.PickRandom``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.QueryableExtensions.Shuffle``1(System.Linq.IQueryable{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.QueryableExtensions.SatisfiedBy``2(System.Linq.IQueryable{``0},SharedKernel.Domain.Specifications.Common.ISpecification{``1})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="queryable"></param>
            <param name="spec"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.QueryableExtensions.OrderAndPaged``1(System.Linq.IQueryable{``0},SharedKernel.Application.Cqrs.Queries.Entities.PageOptions)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable"></param>
            <param name="pageOptions"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.QueryableExtensions.ToPagedList``1(System.Linq.IQueryable{``0},SharedKernel.Application.Cqrs.Queries.Entities.PageOptions,SharedKernel.Domain.Specifications.Common.ISpecification{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable"></param>
            <param name="pageOptions"></param>
            <param name="spec"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.QueryableExtensions.Order``1(System.Linq.IQueryable{``0},System.Collections.Generic.IList{SharedKernel.Application.Cqrs.Queries.Entities.Order})">
            <summary>
            Apply IQueryable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="sortedColumns"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.QueryableExtensions.ApplyOrderBy``1(System.Linq.IQueryable{``0},System.Boolean,System.String)">
            <summary>
                Convert a string to lambda expression
                Example => "Person.Child.Name" : x => x.Person.Child.Name
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="ascending"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.QueryableExtensions.ApplyThenBy``1(System.Linq.IQueryable{``0},System.Boolean,System.String)">
            <summary>
                Convert a string to lambda expression
                Example => "Person.Child.Name" : x => x.Person.Child.Name
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="ascending"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Extensions.StringExtensions">
            <summary>
            String extensions
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Extensions.StringExtensions.DictionaryToQueryString(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                    /// Example Usage:
            -------------------------------------------------------
            <code>
            var queryParams = new Dictionary&lt;string&gt;()
            {
                { "x", "1" },
                { "y", "2" },
                { "foo", "bar" },
                { "foo", "baz" },
                { "special chars", "? = &#38;" },
            };
            string url = "http://example.com/stuff" + ToQueryString(queryParams);
            
            Console.WriteLine(url);
            -------------------------------------------------------
            Output:
            <string>http://example.com/stuff?x=1&amp;y=2&amp;foo=bar&amp;foo=baz&amp;special%20chars=%3F%20%3D%20%26</string>
            </code>
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.StringExtensions.ConvertTimeSpanToString(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.StringExtensions.CapitalizeFirstLetter(System.String)">
            <summary>
            Capitalize first letter
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.StringExtensions.ContainsIgnoreCase(System.String,System.String)">
            <summary>
            Ignorar mayúsculas y minúsculas
            </summary>
            <param name="source"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Extensions.StringExtensions.WithoutBrackets(System.String)">
            <summary>
            Remove brackets
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Logging.ICustomLogger">
            <summary>
            Provides logging interface and utility functions.
            https://github.com/uhaciogullari/NLog.Interface/blob/master/NLog.Interface/ICustomLogger.cs
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Logging.ICustomLogger.Verbose(System.String,System.Object[])">
            <overloads>
            Writes the diagnostic message at the <c>Info</c> level using the specified format provider and format parameters.
            </overloads>
            <summary>
            Writes the diagnostic message at the <c>Info</c> level.
            </summary>
            <param name="message">The value to be written.</param>
            <param name="args"></param>
        </member>
        <member name="M:SharedKernel.Application.Logging.ICustomLogger.Debug(System.String,System.Object[])">
            <overloads>
            Writes the diagnostic message at the <c>Info</c> level using the specified format provider and format parameters.
            </overloads>
            <summary>
            Writes the diagnostic message at the <c>Info</c> level.
            </summary>
            <param name="message">The value to be written.</param>
            <param name="args"></param>
        </member>
        <member name="M:SharedKernel.Application.Logging.ICustomLogger.Info(System.String,System.Object[])">
            <overloads>
            Writes the diagnostic message at the <c>Info</c> level using the specified format provider and format parameters.
            </overloads>
            <summary>
            Writes the diagnostic message at the <c>Info</c> level.
            </summary>
            <param name="message">The value to be written.</param>
            <param name="args"></param>
        </member>
        <member name="M:SharedKernel.Application.Logging.ICustomLogger.Warn(System.String,System.Object[])">
            <overloads>
            Writes the diagnostic message at the <c>Warn</c> level using the specified format provider and format parameters.
            </overloads>
            <summary>
            Writes the diagnostic message at the <c>Warn</c> level.
            </summary>
            <param name="message">The value to be written.</param>
            <param name="args"></param>
        </member>
        <member name="M:SharedKernel.Application.Logging.ICustomLogger.Warn(System.Exception,System.String,System.Object[])">
            <overloads>
            Writes the diagnostic message at the <c>Warn</c> level using the specified format provider and format parameters.
            </overloads>
            <summary>
            Writes the diagnostic message at the <c>Warn</c> level.
            </summary>
            <param name="exception"></param>
            <param name="message">The value to be written.</param>
            <param name="args"></param>
        </member>
        <member name="M:SharedKernel.Application.Logging.ICustomLogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            Writes the diagnostic message and exception at the <c>Error</c> level.
            </summary>
            <param name="exception"></param>
            <param name="message">The value to be written.</param>
            <param name="args"></param>
        </member>
        <member name="M:SharedKernel.Application.Logging.ICustomLogger.Fatal(System.Exception,System.String,System.Object[])">
            <overloads>
            Writes the diagnostic message at the <c>Fatal</c> level using the specified format provider and format parameters.
            </overloads>
            <summary>
            Writes the diagnostic message at the <c>Fatal</c> level.
            </summary>
            <param name="exception"></param>
            <param name="message">The value to be written.</param>
            <param name="args"></param>
        </member>
        <member name="T:SharedKernel.Application.Logging.ICustomLogger`1">
            <summary>
            A generic interface for logging where the category name is derived from the specified
            <typeparamref name="TCategoryName" /> type name.
            Generally used to enable activation of a named <see cref="T:Microsoft.Extensions.Logging.ICustomLogger" /> from dependency injection.
            </summary>
            <typeparam name="TCategoryName">The type who's name is used for the customLogger category name.</typeparam>
        </member>
        <member name="T:SharedKernel.Application.Reflection.ReflectionHelper">
            <summary>
            Reflection helper
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Reflection.ReflectionHelper.GetAssemblyByName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Reflection.ReflectionHelper.GetType(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Reflection.ReflectionHelper.GetType(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="assemblyName"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Reflection.ReflectionHelper.GetType(System.Reflection.Assembly,System.String)">
            <summary>
            
            </summary>
            <param name="assembly"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Reflection.ReflectionHelper.CreateInstance``1(System.Type)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Reflection.ReflectionHelper.CreateInstance``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Reflection.ReflectionHelper.SetProperty``1(``0,System.String,System.Object)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:SharedKernel.Application.Reflection.ReflectionHelper.SetField``1(``0,System.String,System.Object)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:SharedKernel.Application.Reflection.ReflectionHelper.GetProperty``2(``0,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="obj"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Reporting.ExportReportType">
            <summary>
            Output file extension for SQL Server Reporting Services render
            </summary>
        </member>
        <member name="F:SharedKernel.Application.Reporting.ExportReportType.Word">
            <summary>
            word 2003-2007 .doc
            </summary>
        </member>
        <member name="F:SharedKernel.Application.Reporting.ExportReportType.WordOpenXml">
            <summary>
            word 2010-2016 .docx
            </summary>
        </member>
        <member name="F:SharedKernel.Application.Reporting.ExportReportType.Excel">
            <summary>
            excel 2003-2007 .xls
            </summary>
        </member>
        <member name="F:SharedKernel.Application.Reporting.ExportReportType.ExcelOpenXml">
            <summary>
            excel 2010-2016 .xlsx
            </summary>
        </member>
        <member name="F:SharedKernel.Application.Reporting.ExportReportType.Pdf">
            <summary>
            pdf file
            </summary>
        </member>
        <member name="F:SharedKernel.Application.Reporting.ExportReportType.Image">
            <summary>
            image
            </summary>
        </member>
        <member name="F:SharedKernel.Application.Reporting.ExportReportType.Html">
            <summary>
            html5
            </summary>
        </member>
        <member name="F:SharedKernel.Application.Reporting.ExportReportType.Rpl">
            <summary>
            RPL
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Reporting.IReportRenderer">
            <summary>
            SQL Server Reporting Services report renderer (rdlc extension)
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Reporting.IReportRenderer.RenderRdlc(System.String,SharedKernel.Application.Reporting.ExportReportType,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Render a rdlc (SQL Server Reporting Services)
            </summary>
            <param name="reportPath">Absolute file path</param>
            <param name="exportReportType">Export file extension</param>
            <param name="parameters">Report parameters</param>
            <param name="dataSources">Report datasources</param>
            <returns>Array file contents</returns>
        </member>
        <member name="T:SharedKernel.Application.RetryPolicies.IRetriever">
            <summary>
            Retry retriever provides an ability to automatically re-invoke a failed operation
            </summary>
        </member>
        <member name="M:SharedKernel.Application.RetryPolicies.IRetriever.ExecuteAsync``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Func{System.Exception,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Retry retriever provides an ability to automatically re-invoke a failed operation
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="action"></param>
            <param name="needToRetryTheException"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.RetryPolicies.IRetriever.ExecuteAsync``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Func{System.Exception,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Retry retriever provides an ability to automatically re-invoke a failed operation
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="action"></param>
            <param name="needToRetryTheException"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Security.Cryptography.IBase64">
            <summary>
            Base 64 helper
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.IBase64.EncodeTo64(System.String)">
            <summary>
            Encode to base 64 string
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.IBase64.DecodeFrom64(System.String)">
            <summary>
            Decode from base 64 string
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Security.Cryptography.IMd5Encryptor">
            <summary>
            Encription helper
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.IMd5Encryptor.Encrypt(System.String,System.String)">
            <summary>
                Function for Text String Encryption
                <param name="text">Text to encrypt</param>
                <param name="secretKey">Secret key</param>
                <returns>Encrypted string</returns>
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.IMd5Encryptor.Decrypt(System.String,System.String)">
            <summary>
                Function for decrypting text strings
                <param name="text">Text to decrypt</param>
                <param name="secretKey">Secret key</param>
                <returns>Decrypted string</returns>
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Security.Cryptography.IRandomNumberGenerator">
            <summary>
            Random number generator
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.IRandomNumberGenerator.GetRandom(System.Int32,System.Int32)">
            <summary>
            Generates a random number
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Security.Cryptography.ISecureHashAlgorithm">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.ISecureHashAlgorithm.Generate512String(System.String)">
            <summary>
            
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.ISecureHashAlgorithm.Generate512String(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.ISecureHashAlgorithm.Generate256String(System.String)">
            <summary>
            
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.ISecureHashAlgorithm.Generate256String(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Security.Cryptography.ISha256">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.ISha256.HashHmac(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.ISha256.GetSignature(System.Byte[],System.String)">
            <summary>
            Get HMAC SHA256 signature with 3DES key
            </summary>
            <param name="tripeDesKey"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Security.Cryptography.ITripleDes">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Security.Cryptography.ITripleDes.Encrypt(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="textKey"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Security.OpenIdOptions">
            <summary>
            Authentication configuration
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Security.OpenIdOptions.Authority">
            <summary>
            Authority
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Security.OpenIdOptions.RequireHttpsMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Security.OpenIdOptions.Audience">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Security.OpenIdOptions.ClientId">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Security.OpenIdOptions.ClientSecret">
            <summary>
            /
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Security.OpenIdOptions.Scopes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Security.OpenIdOptions.AccessTokenSecondsLifetime">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Security.Scope">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Security.Scope.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.Security.Scope.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharedKernel.Application.Serializers.IBinarySerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Serializers.IBinarySerializer.Serialize``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Serializers.IBinarySerializer.Deserialize``1(System.Byte[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Serializers.IJsonSerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Serializers.IJsonSerializer.Serialize(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Serializers.IJsonSerializer.Deserialize``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Serializers.IJsonSerializer.DeserializeAnonymousType``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Settings.IOptionsService`1">
            <summary>
            Used to retrieve configured <typeparamref name="TOptions"/> instances.
            </summary>
            <typeparam name="TOptions">The type of options being requested.</typeparam>
        </member>
        <member name="P:SharedKernel.Application.Settings.IOptionsService`1.Value">
            <summary>
            The default configured <typeparamref name="TOptions"/> instance
            </summary>
        </member>
        <member name="T:SharedKernel.Application.System.ICulture">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharedKernel.Application.System.ICulture.LanguageId">
            <summary>
            Current user culture
            </summary>
        </member>
        <member name="P:SharedKernel.Application.System.ICulture.LanguageSpaId">
            <summary>
            Spanish default culture
            </summary>
        </member>
        <member name="T:SharedKernel.Application.System.IDateTime">
            <summary>
            Date time manager
            </summary>
        </member>
        <member name="P:SharedKernel.Application.System.IDateTime.UtcNow">
            <summary>
            Machine utc date time
            </summary>
        </member>
        <member name="P:SharedKernel.Application.System.IDateTime.MaxValue">
            <summary>
            Max date time value
            </summary>
        </member>
        <member name="T:SharedKernel.Application.System.IGuid">
            <summary>
            Random Guid generator
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.IGuid.NewGuid">
            <summary>
            Generate a random Guid
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.IGuid.NewGuid(System.Int32)">
            <summary>
            Generate a Guid from int
            Sample: from number 15 generates 00000000-0000-0000-0000-000000000015
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.System.IStreamHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.IStreamHelper.ToByteArray(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.System.IStringHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.IStringHelper.ToLowerUnderscore(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.IStringHelper.Replace(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="dataSource"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.System.IWeb">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.IWeb.HtmlEncode(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.IWeb.HtmlDecode(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.IWeb.UrlEncode(System.String)">
            <summary>
            /
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.IWeb.UrlDecode(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.System.TaskHelper">
            <summary>Gets a task that has already completed successfully.</summary>
            <returns>The successfully completed task.</returns>
        </member>
        <member name="P:SharedKernel.Application.System.TaskHelper.CompletedTask">
            <summary>Gets a task that has already completed successfully.</summary>
            <returns>The successfully completed task.</returns>
        </member>
        <member name="M:SharedKernel.Application.System.TaskHelper.DelayToUtcHour(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary> Create a task that will be completed when the time comes. </summary>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.TaskHelper.DelayToHour(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary> Create a task that will be completed when the time comes. </summary>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.TaskHelper.RunSync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Execute an asynchronous function synchronously
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.TaskHelper.RunSync(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Execute an asynchronous function synchronously
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.TaskHelper.RunSync``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Wait for a task to finish
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.TaskHelper.RunSync(System.Threading.Tasks.Task)">
            <summary>
            Wait for a task to finish
            </summary>
        </member>
        <member name="T:SharedKernel.Application.System.Threading.IMutex">
            <summary>
            Object to release mutex
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.Threading.IMutex.Release">
            <summary>
            Relase mutex
            </summary>
        </member>
        <member name="T:SharedKernel.Application.System.Threading.IMutexFactory">
            <summary>
            Create mutex objects
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.Threading.IMutexFactory.Create(System.String)">
            <summary>
            Create a mutex object by a key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.Threading.IMutexFactory.CreateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Create a mutex object by a key
            </summary>
            <param name="key"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.System.Threading.IMutexManager">
            <summary>
            Mutex manager
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.Threading.IMutexManager.RunOneAtATimeFromGivenKey(System.String,System.Action)">
            <summary>
            Run one at time from given key
            </summary>
            <param name="key"></param>
            <param name="action"></param>
        </member>
        <member name="M:SharedKernel.Application.System.Threading.IMutexManager.RunOneAtATimeFromGivenKey``1(System.String,System.Func{``0})">
            <summary>
            Run one at time from given key
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="function"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.System.Threading.IMutexManager.RunOneAtATimeFromGivenKeyAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            Run one at time from given key
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="function"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.System.Threading.IParallel">
            <summary>
            Executes a for each operation on an <see cref="T:System.Collections.Generic.IEnumerable`1"/> in which iterations may run in parallel
            </summary>
        </member>
        <member name="M:SharedKernel.Application.System.Threading.IParallel.ForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken,System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>Executes a for each operation on an <see cref="T:System.Collections.Generic.IEnumerable`1"/> in which iterations may run in parallel.</summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="cancellationToken">A cancellation token that may be used to cancel the for each operation.</param>
            <param name="body">An asynchronous delegate that is invoked once per element in the data source.</param>
            <exception cref="T:System.ArgumentNullException">The exception that is thrown when the <paramref name="source"/> argument or <paramref name="body"/> argument is null.</exception>
            <returns>A task that represents the entire for each operation.</returns>
            <remarks>The operation will execute at most <see cref="P:System.Environment.ProcessorCount"/> operations in parallel.</remarks>
        </member>
        <member name="T:SharedKernel.Application.Transactions.IModuleTransactionAsync">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Transactions.IModuleTransactionAsync.Begin">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Transactions.IModuleTransactionAsync.End">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharedKernel.Application.UnitOfWorks.IFileSystemUnitOfWorkAsync">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharedKernel.Application.UnitOfWorks.IUnitOfWork">
            <summary>
            Synchronous unit of work pattern
            </summary>
        </member>
        <member name="M:SharedKernel.Application.UnitOfWorks.IUnitOfWork.Rollback">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.UnitOfWorks.IUnitOfWork.SaveChanges">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.UnitOfWorks.IUnitOfWorkAsync">
            <summary>
            Asynchronous unit of work pattern
            </summary>
        </member>
        <member name="M:SharedKernel.Application.UnitOfWorks.IUnitOfWorkAsync.RollbackAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.UnitOfWorks.IUnitOfWorkAsync.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Utils.Dates.DateTimeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Utils.Dates.DateTimeExtensions.ToWeekNumber(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Utils.Dates.DateTimeExtensions.ToReadableString(System.Nullable{System.TimeSpan})">
            <summary>
            
            </summary>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Utils.Dates.DateTimeExtensions.ToReadableString(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Utils.Dates.DateTimeExtensions.MonthDifference(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="maxValue"></param>
            <param name="minValue"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Utils.Maths.MathUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Utils.Maths.MathUtils.GetPercentage(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="num"></param>
            <param name="total"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Utils.Taxes.ValueAddedTaxExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Utils.Taxes.ValueAddedTaxExtensions.CalculateValueAddedTax(System.Single,System.Nullable{System.Double})">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="valueAddedTax"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Utils.Taxes.ValueAddedTaxExtensions.CalculateValueAddedTax(System.Double,System.Nullable{System.Double})">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="valueAddedTax"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Utils.Taxes.ValueAddedTaxExtensions.CalculateWithValueAddedTax(System.Single,System.Nullable{System.Double})">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="valueAddedTax"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Utils.Taxes.ValueAddedTaxExtensions.CalculateWithValueAddedTax(System.Double,System.Nullable{System.Double})">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="valueAddedTax"></param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Validator.IEntityValidator`1">
            <summary>
            The entity validator base contract
            </summary>
        </member>
        <member name="M:SharedKernel.Application.Validator.IEntityValidator`1.ValidateList(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:SharedKernel.Application.Validator.IEntityValidator`1.Validate(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SharedKernel.Application.Validator.IEntityValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:SharedKernel.Application.Validator.ValidationFailure">
            <summary>Defines a validation failure</summary>
        </member>
        <member name="M:SharedKernel.Application.Validator.ValidationFailure.#ctor(System.String,System.String,System.Object)">
            <summary>Creates a new ValidationFailure.</summary>
        </member>
        <member name="P:SharedKernel.Application.Validator.ValidationFailure.PropertyName">
            <summary>The name of the property.</summary>
        </member>
        <member name="P:SharedKernel.Application.Validator.ValidationFailure.ErrorMessage">
            <summary>The error message</summary>
        </member>
        <member name="P:SharedKernel.Application.Validator.ValidationFailure.AttemptedValue">
            <summary>The property value that caused the failure.</summary>
        </member>
        <member name="M:SharedKernel.Application.Validator.ValidationFailure.ToString">
            <summary>Creates a textual representation of the failure.</summary>
        </member>
        <member name="T:SharedKernel.Application.Validator.ValidationFailureException">
            <summary>An exception that represents failed validation</summary>
        </member>
        <member name="P:SharedKernel.Application.Validator.ValidationFailureException.Errors">
            <summary>Validation errors</summary>
        </member>
        <member name="M:SharedKernel.Application.Validator.ValidationFailureException.#ctor(System.String)">
            <summary>Creates a new ValidationException</summary>
            <param name="message"></param>
        </member>
        <member name="M:SharedKernel.Application.Validator.ValidationFailureException.#ctor(System.String,System.Collections.Generic.IEnumerable{SharedKernel.Application.Validator.ValidationFailure})">
            <summary>Creates a new ValidationException</summary>
            <param name="message"></param>
            <param name="errors"></param>
        </member>
        <member name="M:SharedKernel.Application.Validator.ValidationFailureException.#ctor(System.Collections.Generic.IList{SharedKernel.Application.Validator.ValidationFailure})">
            <summary>Creates a new ValidationException</summary>
            <param name="errors"></param>
        </member>
        <member name="M:SharedKernel.Application.Validator.ValidationFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:SharedKernel.Application.Validator.ValidationFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
    </members>
</doc>
